name: Deploy Web App to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Create env file
        run: |
          echo "FIREBASE_API_KEY=AIzaSyBZiJPTs7dMccVgFV-YoTejnhy1bZNFEQY" > .env
          echo "FIREBASE_AUTH_DOMAIN=heartglowai.firebaseapp.com" >> .env
          echo "FIREBASE_PROJECT_ID=heartglowai" >> .env
          echo "FIREBASE_STORAGE_BUCKET=heartglowai.firebasestorage.app" >> .env
          echo "FIREBASE_MESSAGING_SENDER_ID=196565711798" >> .env
          echo "FIREBASE_APP_ID=1:196565711798:web:79e2b0320fd8e74ab0df17" >> .env
          echo "FIREBASE_MEASUREMENT_ID=G-KJMPL1DNPY" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env

      - name: Create web build directory
        run: |
          mkdir -p web-build
          
          # Copy assets
          cp -r assets web-build/ || true
          
          # Create .nojekyll file to prevent GitHub Pages from using Jekyll
          touch web-build/.nojekyll
          
          # Create robots.txt
          echo "User-agent: *" > web-build/robots.txt
          echo "Allow: /" >> web-build/robots.txt
          
          # Create CNAME file
          echo "heartglowai.com" > web-build/CNAME
          
          # Remove any potential README or index.md files that might take precedence
          rm -f web-build/README.md web-build/index.md || true
          
      - name: Copy HTML template to web-build
        run: |
          # Copy from the tmp directory if it exists, otherwise try the root directory
          if [ -f "tmp/index.html" ]; then
            cp -f tmp/index.html web-build/
            echo "Copied index.html from tmp directory"
          else
            cp -f index.html web-build/ || echo "No index.html found in root directory"
          fi

      - name: Update API key in HTML file
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          if [ -n "$OPENAI_API_KEY" ]; then
            # Debugging
            echo "Attempting to inject API key into HTML file"
            echo "File before replacement:"
            grep "openai-api-key" web-build/index.html || echo "Meta tag not found"
            
            # Use a more reliable method to replace the placeholder
            # First, escape any special characters in the API key
            ESCAPED_KEY=$(printf '%s\n' "$OPENAI_API_KEY" | sed -e 's/[\/&]/\\&/g')
            
            # Replace the placeholder using the escaped key
            sed -i "s/__OPENAI_API_KEY__/$ESCAPED_KEY/g" web-build/index.html
            
            # Verify replacement
            echo "File after replacement:"
            grep "openai-api-key" web-build/index.html || echo "Meta tag not found"
            
            # Check if the key was injected (without printing the full key)
            if grep -q "content=\"sk-" web-build/index.html; then
              echo "✓ API key successfully injected into the HTML file"
            else
              echo "✗ WARNING: API key may not have been injected properly"
              echo "Placeholder still present: $(grep -o "__OPENAI_API_KEY__" web-build/index.html || echo "No")"
            fi
          else
            echo "WARNING: No OpenAI API key found in secrets. The application will use mock responses only."
            echo "Please add your OpenAI API key to the repository secrets as OPENAI_API_KEY."
          fi

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: web-build
          clean: true 