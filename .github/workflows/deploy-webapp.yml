name: Deploy Web App to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install --legacy-peer-deps

      - name: Create env file
        run: |
          echo "FIREBASE_API_KEY=AIzaSyBZiJPTs7dMccVgFV-YoTejnhy1bZNFEQY" > .env
          echo "FIREBASE_AUTH_DOMAIN=heartglowai.firebaseapp.com" >> .env
          echo "FIREBASE_PROJECT_ID=heartglowai" >> .env
          echo "FIREBASE_STORAGE_BUCKET=heartglowai.firebasestorage.app" >> .env
          echo "FIREBASE_MESSAGING_SENDER_ID=196565711798" >> .env
          echo "FIREBASE_APP_ID=1:196565711798:web:79e2b0320fd8e74ab0df17" >> .env
          echo "FIREBASE_MEASUREMENT_ID=G-KJMPL1DNPY" >> .env

      - name: Create direct web App
        run: |
          mkdir -p web-build
          
          # Copy assets
          cp -r assets web-build/
          
          # Create a direct React app
          cat > web-build/index.html << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="utf-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0" />
            <title>HeartGlowAI</title>
            <style>
              html, body {
                width: 100%;
                height: 100%;
                margin: 0;
                padding: 0;
                background-color: #050A14;
                color: white;
                font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
              }
              
              #app {
                max-width: 100%;
                width: 100%;
                height: 100%;
                display: flex;
                flex-direction: column;
                align-items: center;
              }
              
              .header {
                padding: 20px;
                text-align: center;
              }
              
              .logo {
                width: 100px;
                height: 100px;
                margin-bottom: 15px;
              }
              
              .container {
                width: 100%;
                max-width: 500px;
                padding: 20px;
                box-sizing: border-box;
                display: flex;
                flex-direction: column;
                flex: 1;
              }
              
              .btn {
                background: linear-gradient(135deg, #ff6b9d 0%, #9460fb 100%);
                color: white;
                border: none;
                border-radius: 25px;
                padding: 15px 25px;
                font-size: 16px;
                margin: 10px 0;
                cursor: pointer;
                font-weight: bold;
                transition: transform 0.2s, box-shadow 0.2s;
                box-shadow: 0 4px 12px rgba(150, 50, 250, 0.3);
              }
              
              .btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 16px rgba(150, 50, 250, 0.4);
              }
              
              .input {
                background-color: #1b1f2b;
                color: white;
                border: 1px solid #2c3347;
                border-radius: 10px;
                padding: 15px;
                font-size: 16px;
                margin: 10px 0;
                width: 100%;
                box-sizing: border-box;
              }
              
              .select {
                background-color: #1b1f2b;
                color: white;
                border: 1px solid #2c3347;
                border-radius: 10px;
                padding: 15px;
                font-size: 16px;
                margin: 10px 0;
                width: 100%;
                box-sizing: border-box;
              }
              
              .card {
                background-color: #1b1f2b;
                border-radius: 10px;
                padding: 20px;
                margin: 15px 0;
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
              }
              
              .message {
                white-space: pre-wrap;
                line-height: 1.5;
              }
              
              label {
                font-size: 14px;
                margin-bottom: 5px;
                color: #b7bac1;
              }
              
              .loading {
                display: flex;
                justify-content: center;
                margin: 20px 0;
              }
              
              .spinner {
                border: 4px solid rgba(255, 255, 255, 0.1);
                border-radius: 50%;
                border-top: 4px solid #9460fb;
                width: 40px;
                height: 40px;
                animation: spin 1s linear infinite;
              }
              
              @keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
              }

              .auth-form {
                display: flex;
                flex-direction: column;
                width: 100%;
              }

              .tab-buttons {
                display: flex;
                margin-bottom: 20px;
              }

              .tab-button {
                flex: 1;
                padding: 10px;
                text-align: center;
                background: #1b1f2b;
                cursor: pointer;
                border: none;
                color: white;
              }

              .tab-button.active {
                background: linear-gradient(135deg, #ff6b9d 0%, #9460fb 100%);
                font-weight: bold;
              }

              .tab-button:first-child {
                border-top-left-radius: 10px;
                border-bottom-left-radius: 10px;
              }

              .tab-button:last-child {
                border-top-right-radius: 10px;
                border-bottom-right-radius: 10px;
              }

              .copy-button {
                background-color: #2c3347;
                color: white;
                border: none;
                border-radius: 20px;
                padding: 8px 15px;
                font-size: 14px;
                margin-top: 10px;
                cursor: pointer;
                display: flex;
                align-items: center;
                justify-content: center;
              }

              .copy-button:hover {
                background-color: #3d455d;
              }
            </style>
          </head>
          <body>
            <div id="app">
              <div class="header">
                <img src="assets/heart-logo.png" alt="HeartGlowAI Logo" class="logo">
                <h1>HeartGlowAI</h1>
              </div>
              
              <div class="container" id="app-container">
                <!-- App will render here -->
                <div id="welcome-screen">
                  <h2>Welcome to HeartGlowAI</h2>
                  <p>Create heartfelt messages for your relationships using AI</p>
                  <button class="btn" id="start-btn">Get Started</button>
                  <button class="btn" id="login-btn" style="background: #2c3347;">Login / Register</button>
                </div>
                
                <div id="auth-screen" style="display: none;">
                  <div class="tab-buttons">
                    <button class="tab-button active" id="login-tab">Login</button>
                    <button class="tab-button" id="register-tab">Register</button>
                  </div>
                  
                  <div class="auth-form">
                    <label for="email">Email</label>
                    <input type="email" id="email" class="input" placeholder="Enter your email">
                    
                    <label for="password">Password</label>
                    <input type="password" id="password" class="input" placeholder="Enter your password">
                    
                    <button class="btn" id="submit-auth">Login</button>
                    <button class="btn" id="back-btn" style="background: #2c3347;">Back</button>
                  </div>
                </div>
                
                <div id="message-screen" style="display: none;">
                  <label for="scenario">Communication Scenario</label>
                  <textarea id="scenario" class="input" rows="4" placeholder="Describe your situation (e.g., 'I need to apologize to my partner for forgetting our anniversary')"></textarea>
                  
                  <label for="relationship">Relationship Type</label>
                  <select id="relationship" class="select">
                    <option value="romantic">Romantic Partner</option>
                    <option value="friend">Friend</option>
                    <option value="family">Family Member</option>
                    <option value="professional">Professional Contact</option>
                  </select>
                  
                  <button class="btn" id="generate-btn">Generate Message</button>
                  
                  <div id="result" class="card" style="display: none;">
                    <h3>Generated Message:</h3>
                    <p id="message-text" class="message"></p>
                    <button class="copy-button" id="copy-btn">Copy to Clipboard</button>
                  </div>
                  
                  <div id="loading" class="loading" style="display: none;">
                    <div class="spinner"></div>
                  </div>
                </div>
              </div>
            </div>
            
            <script>
              // Simple front-end implementation
              document.addEventListener('DOMContentLoaded', function() {
                // Elements
                const welcomeScreen = document.getElementById('welcome-screen');
                const authScreen = document.getElementById('auth-screen');
                const messageScreen = document.getElementById('message-screen');
                const startBtn = document.getElementById('start-btn');
                const loginBtn = document.getElementById('login-btn');
                const backBtn = document.getElementById('back-btn');
                const loginTab = document.getElementById('login-tab');
                const registerTab = document.getElementById('register-tab');
                const submitAuthBtn = document.getElementById('submit-auth');
                const generateBtn = document.getElementById('generate-btn');
                const resultCard = document.getElementById('result');
                const messageText = document.getElementById('message-text');
                const copyBtn = document.getElementById('copy-btn');
                const loading = document.getElementById('loading');
                
                // Event Listeners
                startBtn.addEventListener('click', function() {
                  welcomeScreen.style.display = 'none';
                  messageScreen.style.display = 'block';
                });
                
                loginBtn.addEventListener('click', function() {
                  welcomeScreen.style.display = 'none';
                  authScreen.style.display = 'block';
                });
                
                backBtn.addEventListener('click', function() {
                  authScreen.style.display = 'none';
                  welcomeScreen.style.display = 'block';
                });
                
                loginTab.addEventListener('click', function() {
                  loginTab.classList.add('active');
                  registerTab.classList.remove('active');
                  submitAuthBtn.textContent = 'Login';
                });
                
                registerTab.addEventListener('click', function() {
                  registerTab.classList.add('active');
                  loginTab.classList.remove('active');
                  submitAuthBtn.textContent = 'Register';
                });
                
                submitAuthBtn.addEventListener('click', function() {
                  // Simulate auth for demo
                  authScreen.style.display = 'none';
                  messageScreen.style.display = 'block';
                  alert('Authentication successful! You can now generate messages.');
                });
                
                generateBtn.addEventListener('click', function() {
                  const scenario = document.getElementById('scenario').value;
                  const relationship = document.getElementById('relationship').value;
                  
                  if (!scenario) {
                    alert('Please enter a communication scenario');
                    return;
                  }
                  
                  // Show loading
                  loading.style.display = 'flex';
                  resultCard.style.display = 'none';
                  
                  // Simulate API call delay
                  setTimeout(function() {
                    loading.style.display = 'none';
                    resultCard.style.display = 'block';
                    
                    // Sample messages based on relationship type
                    const messages = {
                      romantic: `My dear,\n\nI'm truly sorry about missing our anniversary. Time slipped away from me, but that's no excuse for forgetting such a special day that celebrates us. I feel terrible knowing I've hurt you.\n\nOur relationship means everything to me, and I promise to make it up to you. I've been reflecting on all the beautiful moments we've shared over the year, and I'm grateful for every single one.\n\nPlease forgive me for this oversight. I love you deeply, and I'll be more mindful of our special dates going forward.\n\nWith all my love,`,
                      friend: `Hey there,\n\nI just wanted to reach out and apologize for my recent behavior. I've been going through some personal challenges, but that doesn't excuse how I've been distant lately. Our friendship means a lot to me, and I miss our conversations and laughs.\n\nI'd love to catch up soon if you're free. Maybe we could grab coffee or take a walk this weekend?\n\nThanks for being such an understanding friend.`,
                      family: `Dear family member,\n\nI want to sincerely apologize for missing our family gathering last weekend. I should have communicated better about my absence. Family is my foundation, and I never want you to feel like you're not a priority in my life.\n\nI'd love to hear about how everything went and perhaps we can arrange a time to get together soon so I can make it up to you.\n\nWith love and appreciation,`,
                      professional: `Hello,\n\nI'm writing regarding the delay in delivering the project materials that were due yesterday. I sincerely apologize for missing this deadline.\n\nI understand the importance of timely delivery and the impact this delay may have on our workflow. I've now completed the materials and have attached them to this message.\n\nTo ensure this doesn't happen again, I've implemented a more robust tracking system for my deliverables.\n\nThank you for your understanding.\n\nBest regards,`
                    };
                    
                    messageText.textContent = messages[relationship];
                  }, 2000);
                });
                
                copyBtn.addEventListener('click', function() {
                  // Copy to clipboard functionality
                  const textToCopy = messageText.textContent;
                  navigator.clipboard.writeText(textToCopy).then(function() {
                    copyBtn.textContent = 'Copied!';
                    setTimeout(function() {
                      copyBtn.textContent = 'Copy to Clipboard';
                    }, 2000);
                  });
                });
              });
            </script>
          </body>
          </html>
          EOL

      - name: Create CNAME file
        run: echo "heartglowai.com" > web-build/CNAME

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          folder: web-build
          token: ${{ secrets.GITHUB_TOKEN }} 